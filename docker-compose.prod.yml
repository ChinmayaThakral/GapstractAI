version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8099:8099"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - SERVER_AUTHENTICATION_JWT_SECRET=${SERVER_AUTHENTICATION_JWT_SECRET}
      - SERVER_AUTHENTICATION_GOOGLE_CLIENT_ID=${SERVER_AUTHENTICATION_GOOGLE_CLIENT_ID}
      - SERVER_AUTHENTICATION_GOOGLE_CLIENT_SECRET=${SERVER_AUTHENTICATION_GOOGLE_CLIENT_SECRET}
      - SERVER_OPENAI_API_KEY=${SERVER_OPENAI_API_KEY}
      - SERVER_ANTHROPIC_API_KEY=${SERVER_ANTHROPIC_API_KEY}
      - SERVER_GEMINI_API_KEY=${SERVER_GEMINI_API_KEY}
      - SERVER_UPLOAD_AWS_ACCESS_KEY=${SERVER_UPLOAD_AWS_ACCESS_KEY}
      - SERVER_UPLOAD_AWS_SECRET_KEY=${SERVER_UPLOAD_AWS_SECRET_KEY}
      - SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME=${SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME}
      - SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME=${SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME}
      - SERVER_UPLOAD_AWS_REGION=${SERVER_UPLOAD_AWS_REGION}
      - SERVER_EMAIL_MAILJET_API_KEY=${SERVER_EMAIL_MAILJET_API_KEY}
      - SERVER_EMAIL_MAILJET_API_SECRET=${SERVER_EMAIL_MAILJET_API_SECRET}
      - SERVER_FIRECRAWL_API_KEY=${SERVER_FIRECRAWL_API_KEY}
      - SERVER_DOCRAPTOR_API_KEY=${SERVER_DOCRAPTOR_API_KEY}
      - SERVER_NANGO_SECRET_KEY=${SERVER_NANGO_SECRET_KEY}
      - PUBLIC_NANGO_KEY=${PUBLIC_NANGO_KEY}
      - PUBLIC_APP_URL=${PUBLIC_APP_URL}
    depends_on:
      - database
    restart: unless-stopped

  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: ${POSTGRES_DB:-api}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5442:5432"
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data: 